# from scope:army
is_enemy_army_nearby = {
	save_temporary_scope_as = local_army
	army_owner = {
		any_war_enemy = {
			any_army = {
				OR = {
					location.county = scope:local_army.location.county
					location.county = {
						any_neighboring_county = {
							this = scope:local_army.location.county
						}
					}
				}
			}
		}
	}
}

# from scope:army
is_enemy_army_in_province = {
	save_temporary_scope_as = local_army
	army_owner = {
		any_war_enemy = {
			any_army = { location.county = scope:local_army.location.county }
		}
	}
}

# from scope:army
is_hostile_army_nearby = {
	location.county = { save_temporary_scope_as = army_loc }
	army_owner = {
		any_raid_target = {
			OR = {
				any_army = {
					OR = {
						location.county = scope:army_loc
						location.county = {
							any_neighboring_county = {
								this = scope:army_loc
							}
						}
					}
				}
				any_vassal_or_below = {
					any_army = {
						OR = {
							location.county = scope:army_loc
							location.county = {
								any_neighboring_county = {
									this = scope:army_loc
								}
							}
						}
					}
				}
			}
		}
	}
}

# from scope:army
is_hostile_army_in_province = {
	location.county = { save_temporary_scope_as = army_loc }
	army_owner = {
		any_raid_target = {
			OR = {
				any_army = { location.county = scope:army_loc }
				any_vassal_or_below = {
					any_army = { location.county = scope:army_loc }
				}
			}
		}
	}
}

# from scope:army
is_in_own_territory = {
	location.county_controller.top_liege = army_owner.top_liege
	location.county.holder.top_liege = army_owner.top_liege
	location.barony_controller.top_liege = army_owner.top_liege
}

# from scope:army
is_in_friendly_territory = {
	location.county = { save_temporary_scope_as = army_loc }
	army_owner = {
		any_war_ally = {
			primary_title = {
				any_in_de_facto_hierarchy = {
					limit = { title_tier = tier_county }
					this = scope:army_loc
				}
			}
		}
	}
}

# from scope:character
# $LOCATION$ is scope:location
has_story_PoW_in_location = {
	$LOCATION$ = { save_temporary_scope_as = check_location }
	owns_story_of_type = story_PoW
	any_owned_story = {
		NAND = {
			exists = scope:story
			THIS = scope:story
		}
		story_type = story_PoW
		var:story_location = scope:check_location
	}
}

# from scope:story
# $LOCATION$ is scope:location
is_story_PoW_in_location = {
	$LOCATION$ = { save_temporary_scope_as = check_location }
	NAND = {
		exists = scope:story
		THIS = scope:story
	}
	story_type = story_PoW
	var:story_location = scope:check_location
}
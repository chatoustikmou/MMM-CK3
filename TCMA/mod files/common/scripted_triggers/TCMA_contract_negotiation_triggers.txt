negotiation_can_advance = {
	has_variable_list = negotiable_obligations
	variable_list_size = {
		name = negotiable_obligations
		value > 0
	}
	any_in_list = {
		variable = negotiable_obligations
		var:$SENDER$_desire > 0
		var:$RECEIVER$_refusal > 0
		var:$RECEIVER$_refusal = { compare_value < scope:story.var:$RECEIVER$_max_balance }
	}
}

obligation_feudal_government_taxes_0_can_be_negotiated = { always = yes }
obligation_feudal_government_taxes_1_can_be_negotiated = { always = yes }
obligation_feudal_government_taxes_2_can_be_negotiated = { always = yes }
obligation_feudal_government_taxes_3_can_be_negotiated = { always = yes }
obligation_feudal_government_taxes_4_can_be_negotiated = { always = yes }
obligation_feudal_government_levies_0_can_be_negotiated = { always = yes }
obligation_feudal_government_levies_1_can_be_negotiated = { always = yes }
obligation_feudal_government_levies_2_can_be_negotiated = { always = yes }
obligation_feudal_government_levies_3_can_be_negotiated = { always = yes }
obligation_feudal_government_levies_4_can_be_negotiated = { always = yes }
obligation_special_contract_0_can_be_negotiated = {
	scope:story.var:vassal.primary_title.tier >= tier_duchy
}
obligation_special_contract_1_can_be_negotiated = {
	scope:story.var:vassal.primary_title.tier >= tier_duchy
	scope:story.var:ruler.culture = { has_innovation = innovation_scutage }
}
obligation_special_contract_2_can_be_negotiated = {
	scope:story.var:vassal.primary_title.tier >= tier_duchy
	scope:story.var:ruler.culture = { has_innovation = innovation_burhs }
}
obligation_special_contract_3_can_be_negotiated = {
	scope:story.var:vassal.primary_title.tier >= tier_duchy
	scope:story.var:ruler.culture = { has_innovation = innovation_divine_right }
}
obligation_religious_rights_0_can_be_negotiated = { always = yes }
obligation_religious_rights_1_can_be_negotiated = {
	NOT = { scope:story.var:vassal.faith = scope:story.var:ruler.faith }
}
obligation_fortification_rights_0_can_be_negotiated = {
	scope:story.var:ruler.culture = { has_innovation = innovation_battlements }
}
obligation_fortification_rights_1_can_be_negotiated = {
	scope:story.var:ruler.culture = { has_innovation = innovation_battlements }
}
obligation_coinage_rights_0_can_be_negotiated = {
	scope:story.var:ruler.culture = { has_innovation = innovation_currency_02 }
}
obligation_coinage_rights_1_can_be_negotiated = {
	scope:story.var:ruler.culture = { has_innovation = innovation_currency_02 }
}
obligation_succession_rights_0_can_be_negotiated = {
	scope:story.var:vassal = { can_have_confederate_partition_succession_law_trigger = yes }
}
obligation_succession_rights_1_can_be_negotiated = {
	scope:story.var:vassal = { can_have_confederate_partition_succession_law_trigger = yes }
}
obligation_war_declaration_rights_0_can_be_negotiated = { always = yes }
obligation_war_declaration_rights_1_can_be_negotiated = { always = yes }
obligation_council_rights_0_can_be_negotiated = { always = yes }
obligation_council_rights_1_can_be_negotiated = { always = yes }
obligation_title_revocation_rights_0_can_be_negotiated = { always = yes }
obligation_title_revocation_rights_1_can_be_negotiated = { always = yes }

# Supported scopes : character
has_claim_on_fellow_vassal = {
	is_landed = yes
	exists = liege
	any_claim = {
		PREV.liege.primary_title = {
			is_de_facto_liege_or_above_target = PREV
		}
		PREV.primary_title = {
			NOT = { is_de_facto_liege_or_above_target = PREV }
		}
	}
}

current_obligation_level = {
	switch = {
		trigger = $OBLIGATION$
		flag:feudal_government_taxes = { vassal_contract_obligation_level:feudal_government_taxes = $LEVEL$ }
		flag:feudal_government_levies = { vassal_contract_obligation_level:feudal_government_levies = $LEVEL$ }
		flag:special_contract = { vassal_contract_obligation_level:special_contract = $LEVEL$ }
		flag:religious_rights = { vassal_contract_obligation_level:religious_rights = $LEVEL$ }
		flag:fortification_rights = { vassal_contract_obligation_level:fortification_rights = $LEVEL$ }
		flag:coinage_rights = { vassal_contract_obligation_level:coinage_rights = $LEVEL$ }
		flag:succession_rights = { vassal_contract_obligation_level:succession_rights = $LEVEL$ }
		flag:war_declaration_rights = { vassal_contract_obligation_level:war_declaration_rights = $LEVEL$ }
		flag:council_rights = { vassal_contract_obligation_level:council_rights = $LEVEL$ }
		flag:title_revocation_rights = { vassal_contract_obligation_level:title_revocation_rights = $LEVEL$ }
	}
}

negotiation_interaction_is_valid = {
	custom_description = {
		text = "not_already_in_negotiation"
		subject = $ACTOR$
		$ACTOR$ = {
			trigger_if = {
				limit = { has_variable = contract_negotiation }
				trigger_if = {
					limit = { has_variable = gui_contract_negotiation }
					trigger_if = {
						limit = { $RECIPIENT$ = { has_variable = gui_contract_negotiation }}
						$ACTOR$.var:contract_negotiation = $RECIPIENT$.var:contract_negotiation
					}
					trigger_else = {
						always = no
					}
				}
				trigger_else = {
					always = no
				}
			}
			trigger_else = {
				always = yes
			}
		}
	}
	custom_description = {
		text = "not_already_in_negotiation"
		subject = $RECIPIENT$
		$RECIPIENT$ = {
			trigger_if = {
				limit = { has_variable = contract_negotiation }
				trigger_if = {
					limit = { has_variable = gui_contract_negotiation }
					trigger_if = {
						limit = { $ACTOR$ = { has_variable = gui_contract_negotiation }}
						$ACTOR$.var:contract_negotiation = $RECIPIENT$.var:contract_negotiation
					}
					trigger_else = {
						always = no
					}
				}
				trigger_else = {
					always = no
				}
			}
			trigger_else = {
				always = yes
			}
		}
	}
}
@monthly_auth_var = 0.5
@monthly_auth_all_things_mult_bonus = 0.1

on_game_start_after_lobby = {
	on_actions = {
		monthly_tick_authority
		on_game_start_StA
	}
}

on_vassal_gained = { on_actions = { contract_reset_on_vassal_gained }}
on_rank_up = { on_actions = { contract_reset_rank_up }}

on_game_start_StA = {
	effect = {
		set_global_variable = {
			name = mod_StA_active
			value = yes
		}
	}
}

contract_reset_on_vassal_gained = {
	trigger = {
		scope:vassal = { has_government = feudal_government }
		OR = {
			scope:transfer_type = flag:conquest
			scope:transfer_type = flag:conquest_holy_war
			scope:transfer_type = flag:conquest_claim
			scope:transfer_type = flag:granted
			scope:transfer_type = flag:swear_fealty
			scope:transfer_type = flag:usurped
			scope:transfer_type = flag:faction_demand
		}
	}
	effect = {
		debug_log = "dbg_log contract reset vassal gained"
		debug_log_scopes = no
		liege = { debug_log_scopes = no }
		scope:transfer_type = { debug_log_scopes = no }
		scope:vassal = {
			trigger_event = {
				id = contract_event.0001
				days = 1
			}
		}
	}
}

contract_reset_rank_up = {
	effect = {
		if = {
			limit = {
				has_government = feudal_government
				NOT = { scope:transfer_type = flag:inheritance }
				NOT = { exists = scope:title }
				is_independent_ruler = no
			}
			debug_log = "dbg_log contract reset rank up"
			debug_log_scopes = no
			liege = { debug_log_scopes = no }
			trigger_event = {
				id = contract_event.0002
				days = 1
			}	
		}
	}
}

monthly_tick_authority = {
	on_actions = {
		delay = { months = 1 }
		monthly_tick_authority
	}
	effect = {
		debug_log = "dbg_log monthly tick"
		every_ruler = {
			limit = {
				OR = {
					has_government = feudal_government
					has_government = clan_government
					has_government = tribal_government
				}
				highest_held_title_tier >= tier_county
			}
			if = {
				limit = {
					NOT = { exists = var:ticking_authority }
				}
				set_variable = {
					name = ticking_authority
					value = {
						add = realm_authority
						divide = 2
					}
				}
			}
			else_if = {
				limit = { var:ticking_authority < realm_authority }
				change_variable = {
					name = ticking_authority
					add = @monthly_auth_var
				}
			}
			else_if = {
				limit = { var:ticking_authority > realm_authority }
				change_variable = {
					name = ticking_authority
					subtract = @monthly_auth_var
				}
			}
			if = {
				limit = {
					culture = { has_innovation = innovation_all_things }
				}
				change_variable = {
					name = ticking_authority
					add = {
						value = @monthly_auth_var
						multiply = @monthly_auth_all_things_mult_bonus
					}
				}
			}
			if = {
				limit = {
					NOT = { culture = { has_innovation = innovation_plenary_assemblies } }
					realm_law_use_crown_authority = yes
				}
				clamp_variable = {
					name = ticking_authority
					max = 25
					min = 0
				}
			}
			else_if = {
				limit = {
					NOT = { culture = { has_innovation = innovation_royal_prerogative } }
					realm_law_use_crown_authority = yes
				}
				clamp_variable = {
					name = ticking_authority
					max = 50
					min = 0
				}
			}
			if = {
				limit = { realm_law_use_crown_authority = yes }
				update_crown_authority = yes
			}
			else_if = {
				limit = { realm_law_use_crown_authority = no }
				update_tribal_authority = yes
			}
		}

		every_barony = {
			limit = {
				exists = holder
				holder = {
					has_government = feudal_government
					highest_held_title_tier = tier_barony
				}
			}
			holder = { StA_reset_feudal_contract = yes }
		}
	}
}

